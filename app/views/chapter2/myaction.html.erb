<h1>Chapter2#myaction</h1>
<p>Find me in app/views/chapter2/myaction.html.erb</p>
<p><a href="#" onclick="customAlert();">Eigene Funktion</a></p>
<script type="text/javascript">
  function customAlert() {
    alert('Hallo aus ein eigenen Funktion.')
  }
</script>

<p><a href="#" onclick="serverSideAlert();">Serverseitige Funktion aufrufen</a></p>
<script type="text/javascript">
  function serverSideAlert() {
    var request = new XMLHttpRequest();
    request.open('get', '/chapter2/myresponse', false);
    request.send(null)
    alert(request.responseText);
  }
</script>

<p><a href="#" onclick="asyncAlert();">Server asynchron aufrufen</a></p>
<script type="text/javascript">
  function asyncAlert() {
    function getRequestObject() {
      try {return new XMLHttpRequest() } catch (e){}
      try {return new ActiveXObject("Msxml2.XMLHTTP")} catch(e) {}
      try {return new ActiveXObject("Microsoft.XMLHTTP")} catch(e) {}
      return false
      }
    var request = getRequestObject();
    request.open('get', '/chapter2/myresponse');
    request.onreadystatechange = function() {
      if(request.readyState==4) alert(request.responseText);
    }
    request.send();
  }
</script>

<%= javascript_include_tag :defaults %>
<p><a href="#" onclick="prototypeAlert();">Aufruf mit Prototype</a></p>
<script type="text/javascript">
  function prototypeAlert() {
    new Ajax.Request('/chapter2/myresponse', {onSuccess: function(request) {
        alert(request.responseText);
    }})
  }
</script>

<p><%= link_to_remote "Aktualisieren mit Javascript-Helper", :url => {:action => "myresponse"},
    :update => "response5" %>
</p>
<p id="response5"></p>

